;var x=1 //; : << 'EOF'
;/*
;\
(use-modules(rnrs bytevectors)(rnrs io ports))(define(ic c)(integer->char c))(define(printf fmt . args)(let loop((c(string->list fmt))(rem args))(cond((null? c)(force-output(current-output-port)))((and(char=?(car c)(ic 37))(not(null?(cdr c))))(let((specifier(cadr c)))(cond((char=? specifier(ic 99))(put-u8(current-output-port)(car rem))(loop(cddr c)(cdr rem)))((char=? specifier(ic 115))(display(car rem))(loop(cddr c)(cdr rem)))((char=? specifier(ic 37))(display(ic 37))(loop(cddr c)rem))(else(loop(cddr c)rem)))))(else(display(car c))(loop(cdr c)rem)))))(define fmt "%c;var x=1 //; : << %cEOF%c%c;/%c%c;%c%c(use-modules(rnrs bytevectors)(rnrs io ports))(define(ic c)(integer->char c))(define(printf fmt . args)(let loop((c(string->list fmt))(rem args))(cond((null? c)(force-output(current-output-port)))((and(char=?(car c)(ic 37))(not(null?(cdr c))))(let((specifier(cadr c)))(cond((char=? specifier(ic 99))(put-u8(current-output-port)(car rem))(loop(cddr c)(cdr rem)))((char=? specifier(ic 115))(display(car rem))(loop(cddr c)(cdr rem)))((char=? specifier(ic 37))(display(ic 37))(loop(cddr c)rem))(else(loop(cddr c)rem)))))(else(display(car c))(loop(cdr c)rem)))))(define fmt %c%s%c)(printf fmt 13 39 39 10 42 10 92 10 34 fmt 34 10 10 34 fmt 34 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 42 10 10 10 10 10 10 42 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 39 fmt 39 34 92 34 34 92 34 34 92 34 34 92 34 34 92 34 34 92 34 34 92 34 34 92 34 39 39 10 34 34 34 34 34 34 34 34 34 34 10 42 194 133 42 10 42 10 10 42 34 fmt 34)#|%csection .data%cfmt db %c%s%c, 0%cargs dq 13,39,39,10,42,10,92,10,34,fmt,34,10,10,34,fmt,34,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,42,10,10,10,10,10,10,42,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,39,fmt,39,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,39,39,10,34,34,34,34,34,34,34,34,34,34,10,42,194,133,42,10,42,10,10,42,34,fmt,34%csection .text%cglobal _start%cstrlen:%cpush rbx%cxor eax, eax%clbl_1:%cmov bl, byte [rdi+rax]%ccmp bl, 0%cje lbl_2%cinc rax%cjmp lbl_1%clbl_2:%cpop rbx%cretn%cputc:%csub rsp, 8%cmov byte [rsp], dil%cmov eax, 1%cmov edi, 1%cmov rsi, rsp%cmov edx, 1%csyscall%cadd rsp, 8%cretn%cwrites:%cpush rdi%ccall strlen%cmov edx, eax%cpop rsi%cmov edi, 1%cmov eax, 1%csyscall%cretn%cprintf:%cpush rbx%cpush r12%cpush r13%cpush r14%cpush r15%cxor ebx, ebx%cxor r13d, r13d%cmov r15, rdi%cmov r14, rsi%cprintf_loop:%cmov r12b, byte [r15+rbx]%ccmp r12b, 0%cje printf_done%ccmp r12b, 37%cje do_fmt%cmovzx rdi, r12b%ccall putc%cinc rbx%cjmp printf_loop%cdo_fmt:%cinc rbx%cmov r12b, byte [r15+rbx]%ccmp r12b, 0%cje printf_done%ccmp r12b, 37%cje print_percent%ccmp r12b, 99%cje print_char%ccmp r12b, 115%cje print_string%cjmp print_unknown%cprint_percent:%cmov rdi, 37%ccall putc%cinc rbx%cjmp printf_loop%cprint_char:%cmov rdi, qword [r14+r13%c8]%ccall putc%cinc r13%cinc rbx%cjmp printf_loop%cprint_string:%cmov rdi, qword [r14+r13%c8]%ccall writes%cinc r13%cinc rbx%cjmp printf_loop%cprint_unknown:%cmov rdi, 37%ccall putc%cmovzx rdi, r12b%ccall putc%cinc rbx%cjmp printf_loop%cprintf_done:%cpop r15%cpop r14%cpop r13%cpop r12%cpop rbx%cretn%c_start:%cmov rdi, fmt%cmov rsi, args%ccall printf%cmov eax, 0x3c%cxor edi, edi%csyscall%c%%if 0%cEOF%cfmt=%c%s%c;n=%c%cx0a%c;r=%c%cx0d%c;q=%c%cx22%c;b=%c%cx5c%c;s=%c%cx27%c;t=%c%cx2a%c;x=%c%cxc2%c;y=%c%cx85%c;c=%cc%c;%cprintf %c${fmt//%%${c}/%%b}%c $r $s $s $n $t $n $b $n $q %c$fmt%c $q $n $n $q %c$fmt%c $q $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $t $n $n $n $n $n $n $t $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $s %c$fmt%c $s $q $b $q $q $b $q $q $b $q $q $b $q $q $b $q $q $b $q $q $b $q $q $b $q $s $s $n $q $q $q $q $q $q $q $q $q $q $n $t $x $y $t $n $t $n $n $t $q %c$fmt%c $q;exit%c%c///%c%cvoid printf(string fmt,params object[]a){var k=Console.OpenStandardOutput();var d=System.Text.Encoding.UTF8.GetBytes(fmt);int i=0,fi=0;while(i<d.Length){var c=d[i++];if(c==37){var n=d[i++];switch(n){case 37:k.WriteByte(37);break;case 99:k.WriteByte((byte)(int)a[fi++]);break;case 115:var s=System.Text.Encoding.UTF8.GetBytes((string)a[fi++]);k.Write(s,0,s.Length);break;}}else k.WriteByte(c);}};string fmt;/%c%cfunction printf(fmt,...a){const d=new TextEncoder().encode(fmt);let i=0,fi=0,o=[];while(i<d.length){const c=d[i++];if(c===37){const n=d[i++];o.push(...(n===37?[n]:n===99?[a[fi++]]:n===115?(new TextEncoder().encode(a[fi++])):n))}else o.push(c);}process.stdout.write(new Uint8Array(o));};var fmt;/%c%c%%endif%c;|#;%c/fmt=%c%s%c;printf(fmt,13,39,39,10,42,10,92,10,34,fmt,34,10,10,34,fmt,34,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,42,10,10,10,10,10,10,42,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,39,fmt,39,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,39,39,10,34,34,34,34,34,34,34,34,34,34,10,42,194,133,42,10,42,10,10,42,34,fmt,34);")(printf fmt 13 39 39 10 42 10 92 10 34 fmt 34 10 10 34 fmt 34 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 42 10 10 10 10 10 10 42 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 39 fmt 39 34 92 34 34 92 34 34 92 34 34 92 34 34 92 34 34 92 34 34 92 34 34 92 34 39 39 10 34 34 34 34 34 34 34 34 34 34 10 42 194 133 42 10 42 10 10 42 34 fmt 34)#|
section .data
fmt db "%c;var x=1 //; : << %cEOF%c%c;/%c%c;%c%c(use-modules(rnrs bytevectors)(rnrs io ports))(define(ic c)(integer->char c))(define(printf fmt . args)(let loop((c(string->list fmt))(rem args))(cond((null? c)(force-output(current-output-port)))((and(char=?(car c)(ic 37))(not(null?(cdr c))))(let((specifier(cadr c)))(cond((char=? specifier(ic 99))(put-u8(current-output-port)(car rem))(loop(cddr c)(cdr rem)))((char=? specifier(ic 115))(display(car rem))(loop(cddr c)(cdr rem)))((char=? specifier(ic 37))(display(ic 37))(loop(cddr c)rem))(else(loop(cddr c)rem)))))(else(display(car c))(loop(cdr c)rem)))))(define fmt %c%s%c)(printf fmt 13 39 39 10 42 10 92 10 34 fmt 34 10 10 34 fmt 34 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 42 10 10 10 10 10 10 42 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 39 fmt 39 34 92 34 34 92 34 34 92 34 34 92 34 34 92 34 34 92 34 34 92 34 34 92 34 39 39 10 34 34 34 34 34 34 34 34 34 34 10 42 194 133 42 10 42 10 10 42 34 fmt 34)#|%csection .data%cfmt db %c%s%c, 0%cargs dq 13,39,39,10,42,10,92,10,34,fmt,34,10,10,34,fmt,34,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,42,10,10,10,10,10,10,42,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,39,fmt,39,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,39,39,10,34,34,34,34,34,34,34,34,34,34,10,42,194,133,42,10,42,10,10,42,34,fmt,34%csection .text%cglobal _start%cstrlen:%cpush rbx%cxor eax, eax%clbl_1:%cmov bl, byte [rdi+rax]%ccmp bl, 0%cje lbl_2%cinc rax%cjmp lbl_1%clbl_2:%cpop rbx%cretn%cputc:%csub rsp, 8%cmov byte [rsp], dil%cmov eax, 1%cmov edi, 1%cmov rsi, rsp%cmov edx, 1%csyscall%cadd rsp, 8%cretn%cwrites:%cpush rdi%ccall strlen%cmov edx, eax%cpop rsi%cmov edi, 1%cmov eax, 1%csyscall%cretn%cprintf:%cpush rbx%cpush r12%cpush r13%cpush r14%cpush r15%cxor ebx, ebx%cxor r13d, r13d%cmov r15, rdi%cmov r14, rsi%cprintf_loop:%cmov r12b, byte [r15+rbx]%ccmp r12b, 0%cje printf_done%ccmp r12b, 37%cje do_fmt%cmovzx rdi, r12b%ccall putc%cinc rbx%cjmp printf_loop%cdo_fmt:%cinc rbx%cmov r12b, byte [r15+rbx]%ccmp r12b, 0%cje printf_done%ccmp r12b, 37%cje print_percent%ccmp r12b, 99%cje print_char%ccmp r12b, 115%cje print_string%cjmp print_unknown%cprint_percent:%cmov rdi, 37%ccall putc%cinc rbx%cjmp printf_loop%cprint_char:%cmov rdi, qword [r14+r13%c8]%ccall putc%cinc r13%cinc rbx%cjmp printf_loop%cprint_string:%cmov rdi, qword [r14+r13%c8]%ccall writes%cinc r13%cinc rbx%cjmp printf_loop%cprint_unknown:%cmov rdi, 37%ccall putc%cmovzx rdi, r12b%ccall putc%cinc rbx%cjmp printf_loop%cprintf_done:%cpop r15%cpop r14%cpop r13%cpop r12%cpop rbx%cretn%c_start:%cmov rdi, fmt%cmov rsi, args%ccall printf%cmov eax, 0x3c%cxor edi, edi%csyscall%c%%if 0%cEOF%cfmt=%c%s%c;n=%c%cx0a%c;r=%c%cx0d%c;q=%c%cx22%c;b=%c%cx5c%c;s=%c%cx27%c;t=%c%cx2a%c;x=%c%cxc2%c;y=%c%cx85%c;c=%cc%c;%cprintf %c${fmt//%%${c}/%%b}%c $r $s $s $n $t $n $b $n $q %c$fmt%c $q $n $n $q %c$fmt%c $q $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $t $n $n $n $n $n $n $t $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $s %c$fmt%c $s $q $b $q $q $b $q $q $b $q $q $b $q $q $b $q $q $b $q $q $b $q $q $b $q $s $s $n $q $q $q $q $q $q $q $q $q $q $n $t $x $y $t $n $t $n $n $t $q %c$fmt%c $q;exit%c%c///%c%cvoid printf(string fmt,params object[]a){var k=Console.OpenStandardOutput();var d=System.Text.Encoding.UTF8.GetBytes(fmt);int i=0,fi=0;while(i<d.Length){var c=d[i++];if(c==37){var n=d[i++];switch(n){case 37:k.WriteByte(37);break;case 99:k.WriteByte((byte)(int)a[fi++]);break;case 115:var s=System.Text.Encoding.UTF8.GetBytes((string)a[fi++]);k.Write(s,0,s.Length);break;}}else k.WriteByte(c);}};string fmt;/%c%cfunction printf(fmt,...a){const d=new TextEncoder().encode(fmt);let i=0,fi=0,o=[];while(i<d.length){const c=d[i++];if(c===37){const n=d[i++];o.push(...(n===37?[n]:n===99?[a[fi++]]:n===115?(new TextEncoder().encode(a[fi++])):n))}else o.push(c);}process.stdout.write(new Uint8Array(o));};var fmt;/%c%c%%endif%c;|#;%c/fmt=%c%s%c;printf(fmt,13,39,39,10,42,10,92,10,34,fmt,34,10,10,34,fmt,34,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,42,10,10,10,10,10,10,42,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,39,fmt,39,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,39,39,10,34,34,34,34,34,34,34,34,34,34,10,42,194,133,42,10,42,10,10,42,34,fmt,34);", 0
args dq 13,39,39,10,42,10,92,10,34,fmt,34,10,10,34,fmt,34,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,42,10,10,10,10,10,10,42,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,39,fmt,39,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,39,39,10,34,34,34,34,34,34,34,34,34,34,10,42,194,133,42,10,42,10,10,42,34,fmt,34
section .text
global _start
strlen:
push rbx
xor eax, eax
lbl_1:
mov bl, byte [rdi+rax]
cmp bl, 0
je lbl_2
inc rax
jmp lbl_1
lbl_2:
pop rbx
retn
putc:
sub rsp, 8
mov byte [rsp], dil
mov eax, 1
mov edi, 1
mov rsi, rsp
mov edx, 1
syscall
add rsp, 8
retn
writes:
push rdi
call strlen
mov edx, eax
pop rsi
mov edi, 1
mov eax, 1
syscall
retn
printf:
push rbx
push r12
push r13
push r14
push r15
xor ebx, ebx
xor r13d, r13d
mov r15, rdi
mov r14, rsi
printf_loop:
mov r12b, byte [r15+rbx]
cmp r12b, 0
je printf_done
cmp r12b, 37
je do_fmt
movzx rdi, r12b
call putc
inc rbx
jmp printf_loop
do_fmt:
inc rbx
mov r12b, byte [r15+rbx]
cmp r12b, 0
je printf_done
cmp r12b, 37
je print_percent
cmp r12b, 99
je print_char
cmp r12b, 115
je print_string
jmp print_unknown
print_percent:
mov rdi, 37
call putc
inc rbx
jmp printf_loop
print_char:
mov rdi, qword [r14+r13*8]
call putc
inc r13
inc rbx
jmp printf_loop
print_string:
mov rdi, qword [r14+r13*8]
call writes
inc r13
inc rbx
jmp printf_loop
print_unknown:
mov rdi, 37
call putc
movzx rdi, r12b
call putc
inc rbx
jmp printf_loop
printf_done:
pop r15
pop r14
pop r13
pop r12
pop rbx
retn
_start:
mov rdi, fmt
mov rsi, args
call printf
mov eax, 0x3c
xor edi, edi
syscall
%if 0
EOF
fmt='%c;var x=1 //; : << %cEOF%c%c;/%c%c;%c%c(use-modules(rnrs bytevectors)(rnrs io ports))(define(ic c)(integer->char c))(define(printf fmt . args)(let loop((c(string->list fmt))(rem args))(cond((null? c)(force-output(current-output-port)))((and(char=?(car c)(ic 37))(not(null?(cdr c))))(let((specifier(cadr c)))(cond((char=? specifier(ic 99))(put-u8(current-output-port)(car rem))(loop(cddr c)(cdr rem)))((char=? specifier(ic 115))(display(car rem))(loop(cddr c)(cdr rem)))((char=? specifier(ic 37))(display(ic 37))(loop(cddr c)rem))(else(loop(cddr c)rem)))))(else(display(car c))(loop(cdr c)rem)))))(define fmt %c%s%c)(printf fmt 13 39 39 10 42 10 92 10 34 fmt 34 10 10 34 fmt 34 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 42 10 10 10 10 10 10 42 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 39 fmt 39 34 92 34 34 92 34 34 92 34 34 92 34 34 92 34 34 92 34 34 92 34 34 92 34 39 39 10 34 34 34 34 34 34 34 34 34 34 10 42 194 133 42 10 42 10 10 42 34 fmt 34)#|%csection .data%cfmt db %c%s%c, 0%cargs dq 13,39,39,10,42,10,92,10,34,fmt,34,10,10,34,fmt,34,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,42,10,10,10,10,10,10,42,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,39,fmt,39,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,39,39,10,34,34,34,34,34,34,34,34,34,34,10,42,194,133,42,10,42,10,10,42,34,fmt,34%csection .text%cglobal _start%cstrlen:%cpush rbx%cxor eax, eax%clbl_1:%cmov bl, byte [rdi+rax]%ccmp bl, 0%cje lbl_2%cinc rax%cjmp lbl_1%clbl_2:%cpop rbx%cretn%cputc:%csub rsp, 8%cmov byte [rsp], dil%cmov eax, 1%cmov edi, 1%cmov rsi, rsp%cmov edx, 1%csyscall%cadd rsp, 8%cretn%cwrites:%cpush rdi%ccall strlen%cmov edx, eax%cpop rsi%cmov edi, 1%cmov eax, 1%csyscall%cretn%cprintf:%cpush rbx%cpush r12%cpush r13%cpush r14%cpush r15%cxor ebx, ebx%cxor r13d, r13d%cmov r15, rdi%cmov r14, rsi%cprintf_loop:%cmov r12b, byte [r15+rbx]%ccmp r12b, 0%cje printf_done%ccmp r12b, 37%cje do_fmt%cmovzx rdi, r12b%ccall putc%cinc rbx%cjmp printf_loop%cdo_fmt:%cinc rbx%cmov r12b, byte [r15+rbx]%ccmp r12b, 0%cje printf_done%ccmp r12b, 37%cje print_percent%ccmp r12b, 99%cje print_char%ccmp r12b, 115%cje print_string%cjmp print_unknown%cprint_percent:%cmov rdi, 37%ccall putc%cinc rbx%cjmp printf_loop%cprint_char:%cmov rdi, qword [r14+r13%c8]%ccall putc%cinc r13%cinc rbx%cjmp printf_loop%cprint_string:%cmov rdi, qword [r14+r13%c8]%ccall writes%cinc r13%cinc rbx%cjmp printf_loop%cprint_unknown:%cmov rdi, 37%ccall putc%cmovzx rdi, r12b%ccall putc%cinc rbx%cjmp printf_loop%cprintf_done:%cpop r15%cpop r14%cpop r13%cpop r12%cpop rbx%cretn%c_start:%cmov rdi, fmt%cmov rsi, args%ccall printf%cmov eax, 0x3c%cxor edi, edi%csyscall%c%%if 0%cEOF%cfmt=%c%s%c;n=%c%cx0a%c;r=%c%cx0d%c;q=%c%cx22%c;b=%c%cx5c%c;s=%c%cx27%c;t=%c%cx2a%c;x=%c%cxc2%c;y=%c%cx85%c;c=%cc%c;%cprintf %c${fmt//%%${c}/%%b}%c $r $s $s $n $t $n $b $n $q %c$fmt%c $q $n $n $q %c$fmt%c $q $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $t $n $n $n $n $n $n $t $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $s %c$fmt%c $s $q $b $q $q $b $q $q $b $q $q $b $q $q $b $q $q $b $q $q $b $q $q $b $q $s $s $n $q $q $q $q $q $q $q $q $q $q $n $t $x $y $t $n $t $n $n $t $q %c$fmt%c $q;exit%c%c///%c%cvoid printf(string fmt,params object[]a){var k=Console.OpenStandardOutput();var d=System.Text.Encoding.UTF8.GetBytes(fmt);int i=0,fi=0;while(i<d.Length){var c=d[i++];if(c==37){var n=d[i++];switch(n){case 37:k.WriteByte(37);break;case 99:k.WriteByte((byte)(int)a[fi++]);break;case 115:var s=System.Text.Encoding.UTF8.GetBytes((string)a[fi++]);k.Write(s,0,s.Length);break;}}else k.WriteByte(c);}};string fmt;/%c%cfunction printf(fmt,...a){const d=new TextEncoder().encode(fmt);let i=0,fi=0,o=[];while(i<d.length){const c=d[i++];if(c===37){const n=d[i++];o.push(...(n===37?[n]:n===99?[a[fi++]]:n===115?(new TextEncoder().encode(a[fi++])):n))}else o.push(c);}process.stdout.write(new Uint8Array(o));};var fmt;/%c%c%%endif%c;|#;%c/fmt=%c%s%c;printf(fmt,13,39,39,10,42,10,92,10,34,fmt,34,10,10,34,fmt,34,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,42,10,10,10,10,10,10,42,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,39,fmt,39,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,39,39,10,34,34,34,34,34,34,34,34,34,34,10,42,194,133,42,10,42,10,10,42,34,fmt,34);';n="\x0a";r="\x0d";q="\x22";b="\x5c";s="\x27";t="\x2a";x="\xc2";y="\x85";c='c';
printf "${fmt//%${c}/%b}" $r $s $s $n $t $n $b $n $q "$fmt" $q $n $n $q "$fmt" $q $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $t $n $n $n $n $n $n $t $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $s "$fmt" $s $q $b $q $q $b $q $q $b $q $q $b $q $q $b $q $q $b $q $q $b $q $q $b $q $s $s $n $q $q $q $q $q $q $q $q $q $q $n $t $x $y $t $n $t $n $n $t $q "$fmt" $q;exit
*///void printf(string fmt,params object[]a){var k=Console.OpenStandardOutput();var d=System.Text.Encoding.UTF8.GetBytes(fmt);int i=0,fi=0;while(i<d.Length){var c=d[i++];if(c==37){var n=d[i++];switch(n){case 37:k.WriteByte(37);break;case 99:k.WriteByte((byte)(int)a[fi++]);break;case 115:var s=System.Text.Encoding.UTF8.GetBytes((string)a[fi++]);k.Write(s,0,s.Length);break;}}else k.WriteByte(c);}};string fmt;/*
function printf(fmt,...a){const d=new TextEncoder().encode(fmt);let i=0,fi=0,o=[];while(i<d.length){const c=d[i++];if(c===37){const n=d[i++];o.push(...(n===37?[n]:n===99?[a[fi++]]:n===115?(new TextEncoder().encode(a[fi++])):n))}else o.push(c);}process.stdout.write(new Uint8Array(o));};var fmt;/*
%endif
;|#;*/fmt="%c;var x=1 //; : << %cEOF%c%c;/%c%c;%c%c(use-modules(rnrs bytevectors)(rnrs io ports))(define(ic c)(integer->char c))(define(printf fmt . args)(let loop((c(string->list fmt))(rem args))(cond((null? c)(force-output(current-output-port)))((and(char=?(car c)(ic 37))(not(null?(cdr c))))(let((specifier(cadr c)))(cond((char=? specifier(ic 99))(put-u8(current-output-port)(car rem))(loop(cddr c)(cdr rem)))((char=? specifier(ic 115))(display(car rem))(loop(cddr c)(cdr rem)))((char=? specifier(ic 37))(display(ic 37))(loop(cddr c)rem))(else(loop(cddr c)rem)))))(else(display(car c))(loop(cdr c)rem)))))(define fmt %c%s%c)(printf fmt 13 39 39 10 42 10 92 10 34 fmt 34 10 10 34 fmt 34 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 42 10 10 10 10 10 10 42 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 39 fmt 39 34 92 34 34 92 34 34 92 34 34 92 34 34 92 34 34 92 34 34 92 34 34 92 34 39 39 10 34 34 34 34 34 34 34 34 34 34 10 42 194 133 42 10 42 10 10 42 34 fmt 34)#|%csection .data%cfmt db %c%s%c, 0%cargs dq 13,39,39,10,42,10,92,10,34,fmt,34,10,10,34,fmt,34,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,42,10,10,10,10,10,10,42,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,39,fmt,39,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,39,39,10,34,34,34,34,34,34,34,34,34,34,10,42,194,133,42,10,42,10,10,42,34,fmt,34%csection .text%cglobal _start%cstrlen:%cpush rbx%cxor eax, eax%clbl_1:%cmov bl, byte [rdi+rax]%ccmp bl, 0%cje lbl_2%cinc rax%cjmp lbl_1%clbl_2:%cpop rbx%cretn%cputc:%csub rsp, 8%cmov byte [rsp], dil%cmov eax, 1%cmov edi, 1%cmov rsi, rsp%cmov edx, 1%csyscall%cadd rsp, 8%cretn%cwrites:%cpush rdi%ccall strlen%cmov edx, eax%cpop rsi%cmov edi, 1%cmov eax, 1%csyscall%cretn%cprintf:%cpush rbx%cpush r12%cpush r13%cpush r14%cpush r15%cxor ebx, ebx%cxor r13d, r13d%cmov r15, rdi%cmov r14, rsi%cprintf_loop:%cmov r12b, byte [r15+rbx]%ccmp r12b, 0%cje printf_done%ccmp r12b, 37%cje do_fmt%cmovzx rdi, r12b%ccall putc%cinc rbx%cjmp printf_loop%cdo_fmt:%cinc rbx%cmov r12b, byte [r15+rbx]%ccmp r12b, 0%cje printf_done%ccmp r12b, 37%cje print_percent%ccmp r12b, 99%cje print_char%ccmp r12b, 115%cje print_string%cjmp print_unknown%cprint_percent:%cmov rdi, 37%ccall putc%cinc rbx%cjmp printf_loop%cprint_char:%cmov rdi, qword [r14+r13%c8]%ccall putc%cinc r13%cinc rbx%cjmp printf_loop%cprint_string:%cmov rdi, qword [r14+r13%c8]%ccall writes%cinc r13%cinc rbx%cjmp printf_loop%cprint_unknown:%cmov rdi, 37%ccall putc%cmovzx rdi, r12b%ccall putc%cinc rbx%cjmp printf_loop%cprintf_done:%cpop r15%cpop r14%cpop r13%cpop r12%cpop rbx%cretn%c_start:%cmov rdi, fmt%cmov rsi, args%ccall printf%cmov eax, 0x3c%cxor edi, edi%csyscall%c%%if 0%cEOF%cfmt=%c%s%c;n=%c%cx0a%c;r=%c%cx0d%c;q=%c%cx22%c;b=%c%cx5c%c;s=%c%cx27%c;t=%c%cx2a%c;x=%c%cxc2%c;y=%c%cx85%c;c=%cc%c;%cprintf %c${fmt//%%${c}/%%b}%c $r $s $s $n $t $n $b $n $q %c$fmt%c $q $n $n $q %c$fmt%c $q $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $t $n $n $n $n $n $n $t $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $n $s %c$fmt%c $s $q $b $q $q $b $q $q $b $q $q $b $q $q $b $q $q $b $q $q $b $q $q $b $q $s $s $n $q $q $q $q $q $q $q $q $q $q $n $t $x $y $t $n $t $n $n $t $q %c$fmt%c $q;exit%c%c///%c%cvoid printf(string fmt,params object[]a){var k=Console.OpenStandardOutput();var d=System.Text.Encoding.UTF8.GetBytes(fmt);int i=0,fi=0;while(i<d.Length){var c=d[i++];if(c==37){var n=d[i++];switch(n){case 37:k.WriteByte(37);break;case 99:k.WriteByte((byte)(int)a[fi++]);break;case 115:var s=System.Text.Encoding.UTF8.GetBytes((string)a[fi++]);k.Write(s,0,s.Length);break;}}else k.WriteByte(c);}};string fmt;/%c%cfunction printf(fmt,...a){const d=new TextEncoder().encode(fmt);let i=0,fi=0,o=[];while(i<d.length){const c=d[i++];if(c===37){const n=d[i++];o.push(...(n===37?[n]:n===99?[a[fi++]]:n===115?(new TextEncoder().encode(a[fi++])):n))}else o.push(c);}process.stdout.write(new Uint8Array(o));};var fmt;/%c%c%%endif%c;|#;%c/fmt=%c%s%c;printf(fmt,13,39,39,10,42,10,92,10,34,fmt,34,10,10,34,fmt,34,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,42,10,10,10,10,10,10,42,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,39,fmt,39,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,39,39,10,34,34,34,34,34,34,34,34,34,34,10,42,194,133,42,10,42,10,10,42,34,fmt,34);";printf(fmt,13,39,39,10,42,10,92,10,34,fmt,34,10,10,34,fmt,34,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,42,10,10,10,10,10,10,42,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,39,fmt,39,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,34,92,34,39,39,10,34,34,34,34,34,34,34,34,34,34,10,42,194,133,42,10,42,10,10,42,34,fmt,34);